import React from 'react';

var browser = window;
var popup = null;
var timer = null;

function watcher() {
  if (popup === null) {
    clearInterval(timer);
    timer = null;
  } else if (popup !== null && !popup.closed) {
    popup.focus();
  } else if (popup !== null && popup.closed) {
    clearInterval(timer);
    browser.focus();
    timer = null;
    popup = null;
  }
}

var WindowOpener = function WindowOpener(props) {
  var children = props.children,
      width = props.width,
      height = props.height,
      className = props.className;
  var opts = "dependent=" + 1 + ", alwaysOnTop=" + 1 + ", alwaysRaised=" + 1 + ", alwaysRaised=" + 1 + ", width=" + (width || 300) + ", height=" + (height || 400) + " left=" + left + " top=" + top;
  browser = window.self;

  browser.onSuccess = function (res) {
    props.bridge(null, res);
  };

  browser.onError = function (error) {
    props.bridge(error);
  };

  browser.onOpen = function (message) {
    props.bridge(null, message);
  };

  browser.onClose = function (message) {
    props.bridge(null, message);
  };

  var onClickHandler = function onClickHandler(evt) {
    console.log('onClickHandler', props);
    var url = props.url,
        name = props.name;

    if (popup && !popup.closed) {
      popup.focus();
      return;
    }

    popup = browser.open(url, name, opts);

    if (timer === null) {
      timer = setInterval(watcher, 500);
    }

    return;
  };

  return /*#__PURE__*/React.createElement("div", {
    className: className,
    onClick: onClickHandler
  }, children);
};

var dualScreenLeft = window.screenLeft !== undefined ? window.screenLeft : window.screenX;
var dualScreenTop = window.screenTop !== undefined ? window.screenTop : window.screenY;
var width = window.innerWidth ? window.innerWidth : document.documentElement.clientWidth ? document.documentElement.clientWidth : screen.width;
var height = window.innerHeight ? window.innerHeight : document.documentElement.clientHeight ? document.documentElement.clientHeight : screen.height;
var systemZoom = width / window.screen.availWidth;
var left = (width - 300) / 2 / systemZoom + dualScreenLeft;
var top = (height - 400) / 2 / systemZoom + dualScreenTop;

export default WindowOpener;
//# sourceMappingURL=index.modern.js.map
